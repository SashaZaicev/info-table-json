{"version":3,"sources":["Components/Table.module.scss","state/tablesReducer.ts","Components/Table2.tsx","Components/TableContainer.tsx","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx"],"names":["module","exports","ADD_TABLES","START_TABLE","initialState","Table2","dataUrl","firstObj","length","tableHeader","Object","keys","columnsName","map","header","index","className","style","headerT","tableBody","data","el","values","value","container","mtb3","tableResponsive","table","sticky","TableContainer","fileJSON","App","json","tablesRender","useSelector","store","tables","dispatch","useDispatch","useEffect","type","console","log","name","onChange","e","evt","f","files","target","i","reader","FileReader","onload","JSON","parse","result","newtable","ex","alert","readAsText","handleFileSelect","accept","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"20KACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,gBAAkB,iC,uHCG1JC,EAAa,aACbC,EAAc,cAGdC,EAAoB,G,uBC6BXC,EA7Be,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACtBC,EAAWD,EAAQE,OAASF,EAAQ,GAAKA,EACzCG,EAAcC,OAAOC,KAAKJ,EAASK,aAAaC,KAAI,SAACC,EAAaC,GACpE,OAAO,oBAAyBC,UAAWC,IAAMC,QAA1C,SAAoDJ,GAA3CC,EAAQD,MAEtBK,EAAYZ,EAASa,KAAKP,KAAI,SAACQ,GAC7B,OAAO,6BACFX,OAAOY,OAAOD,GAAIR,KAAI,SAACU,EAAYR,GAAb,OACnB,6BAAyBQ,GAAhBR,EAAQQ,WAKjC,OACI,qBAAKP,UAAS,UAAKC,IAAMO,UAAX,YAAwBP,IAAMQ,KAA9B,YAAsCR,IAAMS,gBAA5C,KAAd,SACI,wBAAOV,UAAS,UAAKC,IAAMU,OAA3B,UACI,uBAAOX,UAAS,UAAKC,IAAMW,QAA3B,SACA,6BACKnB,MAGL,gCACCU,UClBFU,EATuB,SAAC,GACnC,OADqD,EAAjBvB,QAExBO,KAAI,SAACQ,GACT,OACI,cAAC,EAAD,CAAQf,QAASe,QCC3Bf,EAAUwB,EA8CDC,MA5Cf,WACI,IAOIC,EAPAC,EAAeC,aAA8B,SAACC,GAC9C,OAAOA,EAAMC,OAAOA,UAElBC,EAAWC,cAyBjB,OAxBAC,qBAAU,WACNF,EHgBG,CAACG,KAAMrC,EAAawB,MGhBHrB,MACrB,IAqBHmC,QAAQC,IAAIT,GAER,sBAAKjB,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,uBAAOA,UAAU,YACVwB,KAAK,OACLG,KAAK,YACLC,SAAU,SAACC,GAAD,OAzB7B,SAA0BC,GAEtB,IADA,IACgBC,EADZC,EAAQF,EAAIG,OAAOD,MACdE,EAAI,EAAMH,EAAIC,EAAME,GAAIA,IAAK,CAClC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OACI,SAAUR,GACb,IACIb,EAAOsB,KAAKC,MAAMV,EAAEI,OAAOO,QAC3BnB,EHAb,CAACG,KAAMtC,EAAYuD,SGAazB,IACrB,MAAO0B,GACLC,MAAM,kCAAoCD,KAItDP,EAAOS,WAAWb,IAWUc,CAAiBhB,IAClCiB,OAAO,YAGjB7B,GAAgB,cAAC,EAAD,CAAgB3B,QAAS2B,QCnCvC8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLRQ,EAAcC,YAAgB,CAChCrC,OLMyB,WAAwC,IAAvCsC,EAAsC,uDAA9BtE,EAAcuE,EAAgB,uCAChE,OAAQA,EAAOnC,MACX,KAAKtC,EACD,OAAO,2BAAIwE,GAAX,IAAkBtC,OAAO,GAAD,mBAAMsC,EAAMtC,QAAZ,CAAoBuC,EAAOlB,aAEvD,KAAKtD,EACD,OAAO,2BACAuE,GADP,IAEItC,OAAQuC,EAAOhD,QAGvB,QACI,OAAO+C,MKfNvC,EAAQyC,YAAYJ,GCAjCK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU5C,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGR6C,SAASC,eAAe,SAM5BlB,M","file":"static/js/main.229ffd7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__2dkUM\",\"mtb3\":\"Table_mtb3__1E_30\",\"table\":\"Table_table__3IbPg\",\"sticky\":\"Table_sticky__3p_gh\",\"tableResponsive\":\"Table_tableResponsive__3B6xS\"};","type ActionsType =\r\n    ReturnType<typeof startTable>\r\n    | ReturnType<typeof addTables>\r\n\r\nconst ADD_TABLES = 'ADD_TABLES'\r\nconst START_TABLE = 'START_TABLE'\r\n\r\n\r\nconst initialState: any = []\r\n\r\n\r\nexport const tablesReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case ADD_TABLES: {\r\n            return {...state, tables: [...state.tables, action.newtable]}\r\n        }\r\n        case START_TABLE: {\r\n            return {\r\n                ...state,\r\n                tables: action.table\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addTables = (newtable: any) => {\r\n    return {type: ADD_TABLES, newtable}\r\n}\r\nexport const startTable = (table:any) => {\r\n    debugger\r\n    return {type: START_TABLE, table}\r\n}\r\ntype TableType = {\r\n    columnsName: string;\r\n    data: any;\r\n    _id: any\r\n}\r\n\r\n// type ColumnsType = {\r\n// date: string,\r\n//     name: \"Название\",\r\n//     quantity: \"Количество(кг)\",\r\n//     distance: \"Расстояние(км)\",\r\n//     column5: \"SomeText 5\", …}\r\n// }\r\n","import React from 'react';\r\nimport style from './Table.module.scss'\r\n\r\nexport type TableTypes = {\r\n    dataUrl: Array<any>\r\n}\r\n\r\n\r\nconst Table2: React.FC<any> = ({dataUrl}) => {\r\n    const firstObj = dataUrl.length ? dataUrl[0] : dataUrl;\r\n    const tableHeader = Object.keys(firstObj.columnsName).map((header: any, index) => {\r\n        return <th key={index + header} className={style.headerT}>{header}</th>\r\n    })\r\n    const tableBody = firstObj.data.map((el: any) => {\r\n            return <tr>\r\n                {Object.values(el).map((value: any, index) => (\r\n                    <td key={index + value}>{value}</td>\r\n                ))}\r\n            </tr>\r\n        }\r\n    )\r\n    return (\r\n        <div className={`${style.container} ${style.mtb3} ${style.tableResponsive} `}>\r\n            <table className={`${style.table}`}>\r\n                <thead className={`${style.sticky}`}>\r\n                <tr>\r\n                    {tableHeader}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tableBody}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table2;\r\n","import React from 'react';\r\nimport Table2 from \"./Table2\";\r\n\r\nconst TableContainer: React.FC<any> = ({dataUrl}):any => {\r\n    return (\r\n        dataUrl.map((el:any)=>{\r\n            return (\r\n                <Table2 dataUrl={el}/>\r\n            )})\r\n    );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React, {ChangeEvent, useEffect} from 'react';\nimport './App.scss';\nimport fileJSON from \"../src/data.json\"\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addTables, startTable} from \"./state/tablesReducer\";\nimport TableContainer from \"./Components/TableContainer\";\nimport {AppRootStateType} from \"./state/store\";\n\nconst dataUrl = fileJSON\n\nfunction App() {\n    let tablesRender = useSelector<AppRootStateType>((store) => {\n        return store.tables.tables\n    })\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(startTable(dataUrl))\n    }, [])\n    let json\n\n    function handleFileSelect(evt: any) {\n        let files = evt.target.files;\n        for (let i = 0, f; f = files[i]; i++) {\n            let reader = new FileReader();\n            reader.onload = (function (theFile) {\n                return function (e: any) {\n                    try {\n                        json = JSON.parse(e.target.result);\n                        dispatch(addTables(json))\n                    } catch (ex) {\n                        alert('ex when trying to parse json = ' + ex);\n                    }\n                }\n            })(f);\n            reader.readAsText(f);\n        }\n    }\n\n    console.log(tablesRender)\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <input className=\"inputFile\"\n                       type=\"file\"\n                       name='JSON file'\n                       onChange={(e) => handleFileSelect(e)}\n                       accept=\".json\"\n                />\n            </header>\n            {tablesRender && <TableContainer dataUrl={tablesRender}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {tablesReducer} from \"./tablesReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    tables: tablesReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}